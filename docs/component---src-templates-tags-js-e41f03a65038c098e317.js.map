{"version":3,"sources":["webpack:///./src/components/Hero.js","webpack:///./src/templates/tags.js","webpack:///./src/components/TagList.js","webpack:///./src/components/PostsListItem.js","webpack:///./src/components/PostsList.js"],"names":["HeroContainer","styled","TitleContainer","HeroTitle","HeroSubTitle","props","siteCover","useSiteMetadata","fluid","useSiteImages","heroImg","style","backgroundImage","PageTitle","Tags","render","pageTitle","this","pageContext","posts","data","location","title","tag","React","Component","ListContainer","TagListItemLink","TagListItem","TagList","tags","noLink","key","i","to","Post","ReadPost","PostHeader","Excerpt","PostTitleLink","FooterLine","excerpt","slug","timeToRead","dangerouslySetInnerHTML","__html","min","aria-label","defaultLang","post","language"],"mappings":"6FAAA,6DAKMA,EAAgBC,IAAH,8EAAGA,CAAH,CAAnB,0JAWMC,EAAiBD,IAAH,+EAAGA,CAAH,CAApB,2EAOME,EAAYF,IAAH,yEAAGA,CAAH,CAAf,0HAQMG,EAAeH,IAAH,4EAAGA,CAAH,CAAlB,2FAqBA,IAfa,SAAAI,GAAU,IACbC,EAAcC,cADF,UAEZC,EAAUC,YAFE,SAGdC,EAAUL,WAAiBG,EAAjC,IAEA,OACE,qBAAeG,MAAO,CAAEC,gBAAgB,QAAD,SACrC,yBACE,yBAAYP,EADd,OAEGA,YAAkB,yBAAeA,EAJxC,c,sJChCIQ,EAAYZ,IAAH,wEAAGA,CAAH,CAAf,yBAIMa,E,kGACJC,kBACE,IAAMC,EAAS,IAAOC,KAAKZ,MAAMa,YAAjC,IACMC,EAAQF,KAAKZ,MAAMe,KAAKD,MAA9B,MAEA,OACE,uBAAQE,SAAUJ,KAAKZ,MAAMgB,UAC3B,uBAAKC,MAAK,qBAAuBL,KAAKZ,MAAMa,YAAYK,MACxD,uBAAMD,MAAON,IAEb,2BACE,4CAA4BC,KAAKZ,MAAMa,YADzC,KAEE,uBAAWC,MAAOA,O,GAZTK,IAAMC,WAmBzB,a,+FC7BMC,EAAgBzB,IAAH,6EAAGA,CAAH,CAAnB,qDAKM0B,EAAkB1B,YAAH,mFAAGA,CAAH,CAArB,0LAgBM2B,EAAc3B,IAAH,4EAAGA,CAAH,CAAjB,6HAWM4B,E,kGACJd,kBAAU,IAAD,EACkBE,KADlB,MACCa,EADD,OACOC,EADP,SAGP,OACE,yBACGD,EAAA,KAAS,cACR,OACE,8BAAUE,IAAG,YAAcC,IACvBF,GACA,qBAAiBG,GAAE,SAAWX,GAFlC,GAIGQ,GAAU,qBAAaG,GAAE,SAAWX,GAJvC,GAKGU,EAAIH,SAAJG,OANL,S,GAPYT,IAAMC,WAsB5B,O,yHCnDMU,EAAOlC,IAAH,kFAAGA,CAAH,CAAV,0EAKMmC,EAAWnC,YAAH,sFAAGA,CAAH,CAAd,+QAkBMoC,EAAapC,IAAH,uFAAGA,CAAH,CAAhB,mBAIMqC,EAAUrC,IAAH,+EAAGA,CAAH,CAAb,2CAKMsC,EAAgBtC,YAAH,2FAAGA,CAAH,CAAnB,+EAOMuC,EAAavC,IAAH,oFAAGA,CAAH,CAAhB,qBAmCA,EA/BsB,SAAAI,GAAU,IACtBiB,EAAqDjB,EADhC,MACdoC,EAA8CpC,EADhC,QACLqC,EAAqCrC,EADhC,KACWyB,GAAqBzB,EADhC,SACgCA,EADhC,MACiBsC,EAAetC,EADhC,WAELE,cAFK,YAI7B,OACE,yBACE,yBACE,4BACE,qBAAe2B,GAAE,IAAMQ,GAH7B,KASE,iCACE,qBAASE,wBAAyB,CAAEC,OAAQJ,MAG9C,gCACE,yBACE,uBAAaK,IAAKH,IAClB,sBAFF,MAGE,uBAASb,KAAMA,KAEjB,qBAAUI,GAAE,IAAZ,EAA0Ba,aAAA,sBApBhC,kBC9BF,IAnBkB,SAAC,GAAe,IAAb5B,EAAY,EAAZA,MACX6B,EAAgBzC,cADO,YAG/B,OACE,kCACGY,EAAA,KAAU,SAAA8B,GACT,IAAM5C,EAAQ,CACZiB,MAAO2B,mBADK,MAEZR,QAASQ,OAFG,QAGZP,KAAMO,mBAHM,KAIZN,WAAYM,OAJA,WAKZC,SAAUD,6BALE,EAMZnB,KAAMmB,yBAA8B,IAEtC,OAAO,mCAAejB,IAAK3B,EAAMqC,MAAjC","file":"component---src-templates-tags-js-e41f03a65038c098e317.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport useSiteMetadata from '../hooks/use-site-config'\nimport useSiteImages from '../hooks/use-site-images'\n\nconst HeroContainer = styled.div`\n  position: relative;\n  display: table;\n  width: 100%;\n  height: 400px;\n  overflow: hidden;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n`\n\nconst TitleContainer = styled.div`\n  display: table-cell;\n  vertical-align: middle;\n  text-align: center;\n  width: 100%;\n`\n\nconst HeroTitle = styled.h1`\n  font-weight: 700;\n  font-size: 3rem;\n  margin: 10px 50px;\n  color: var(--color-white);\n  text-shadow: 1px 1px 4px rgba(34, 34, 34, 0.85);\n`\n\nconst HeroSubTitle = styled.h2`\n  margin: 10px 50px;\n  color: var(--color-white);\n  text-shadow: 1px 1px 4px rgba(34, 34, 34, 0.85);\n`\n\nconst Hero = props => {\n  const { siteCover } = useSiteMetadata()\n  const { fluid } = useSiteImages(siteCover)\n  const heroImg = props.heroImg || fluid.src\n\n  return (\n    <HeroContainer style={{ backgroundImage: `url(\"${heroImg}\")` }}>\n      <TitleContainer>\n        <HeroTitle>{props.title}</HeroTitle>\n        {props.subTitle && <HeroSubTitle>{props.subTitle}</HeroSubTitle>}\n      </TitleContainer>\n    </HeroContainer>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport Layout from '../components/layout'\nimport PostsList from '../components/PostsList'\nimport Wrapper from '../components/Wrapper'\nimport SEO from '../components/SEO'\nimport Hero from '../components/Hero'\n\nconst PageTitle = styled.h1`\n  padding-bottom: 10px;\n`\n\nclass Tags extends React.Component {\n  render() {\n    const pageTitle = `#${this.props.pageContext.tag}`\n    const posts = this.props.data.posts.edges\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO title={`Top blog posts on ${this.props.pageContext.tag}`} />\n        <Hero title={pageTitle} />\n\n        <Wrapper>\n          <PageTitle>Posts tagged as {this.props.pageContext.tag}</PageTitle>\n          <PostsList posts={posts} />\n        </Wrapper>\n      </Layout>\n    )\n  }\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query PostsByTag($tag: String!) {\n    posts: allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: {\n          tags: { eq: $tag }\n          published: { ne: false }\n          unlisted: { ne: true }\n        }\n      }\n    ) {\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            language\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","import React, { Fragment } from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst ListContainer = styled.div`\n  display: inline;\n  color: var(--color-textSecondary);\n`\n\nconst TagListItemLink = styled(Link)`\n  text-transform: uppercase;\n  color: var(--color-textSecondary);\n\n  &:not(:first-child) {\n    margin-left: 0.3rem;\n  }\n\n  &:hover {\n    border-bottom: 1px dotted var(--color-textSecondary);\n  }\n  &:before {\n    content: '#';\n  }\n`\n\nconst TagListItem = styled.span`\n  text-transform: uppercase;\n  color: var(--color-textSecondary);\n  &:not(:first-child) {\n    margin-left: 0.3rem;\n  }\n  &:before {\n    content: '#';\n  }\n`\n\nclass TagList extends React.Component {\n  render() {\n    const { tags, noLink } = this.props\n\n    return (\n      <ListContainer>\n        {tags.map((tag, i) => {\n          return (\n            <Fragment key={`tag-list-${i}`}>\n              {!noLink && (\n                <TagListItemLink to={`/tags/${tag}`}>{tag}</TagListItemLink>\n              )}\n              {noLink && <TagListItem to={`/tags/${tag}`}>{tag}</TagListItem>}\n              {i < tags.length - 1 ? ', ' : ''}\n            </Fragment>\n          )\n        })}\n      </ListContainer>\n    )\n  }\n}\n\nexport default TagList\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport TagList from './TagList'\nimport useSiteMetadata from '../hooks/use-site-config'\nimport styled from 'styled-components'\nimport { Bull, ReadingTime } from './Commons'\n\nconst Post = styled.article`\n  border-bottom: 1px solid rgba(214, 209, 230, 0.5);\n  padding-bottom: 1.25rem;\n`\n\nconst ReadPost = styled(Link)`\n  display: block;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  line-height: 2;\n  color: var(--color-text);\n\n  &:hover {\n    background-color: var(--color-grey600);\n    border-radius: 0.25rem;\n    color: var(--color-white);\n  }\n`\n\nconst PostHeader = styled.header`\n  padding: 1em 0;\n`\n\nconst Excerpt = styled.p`\n  line-height: 1.45;\n  padding-bottom: 0.5em;\n`\n\nconst PostTitleLink = styled(Link)`\n  color: var(--color-h2);\n  &:hover {\n    border-bottom: 1px dotted var(--color-text);\n  }\n`\n\nconst FooterLine = styled.div`\n  font-size: 0.8em;\n`\n\nconst PostsListItem = props => {\n  const { title, excerpt, slug, language, tags, timeToRead } = props\n  const { defaultLang } = useSiteMetadata()\n\n  return (\n    <Post>\n      <PostHeader>\n        <h2>\n          <PostTitleLink to={`/${slug}`}> \n            {title}\n          </PostTitleLink>\n        </h2>\n      </PostHeader>\n\n      <section>\n        <Excerpt dangerouslySetInnerHTML={{ __html: excerpt }} />\n      </section>\n\n      <footer>\n        <FooterLine>\n          <ReadingTime min={timeToRead} />\n          <Bull />\n          <TagList tags={tags} />\n        </FooterLine>\n        <ReadPost to={`/${slug}`} aria-label={`View ${title} article`}>\n          Read post â€º\n        </ReadPost>\n      </footer>\n    </Post>\n  )\n}\nexport default PostsListItem\n","import React, { Fragment } from 'react'\n\nimport PostsListItem from './PostsListItem'\nimport useSiteMetadata from '../hooks/use-site-config'\n\nconst PostsList = ({ posts }) => {\n  const { defaultLang } = useSiteMetadata()\n\n  return (\n    <Fragment>\n      {posts.map(post => {\n        const props = {\n          title: post.node.frontmatter.title,\n          excerpt: post.node.excerpt,\n          slug: post.node.frontmatter.slug,\n          timeToRead: post.node.timeToRead,\n          language: post.node.frontmatter.language || defaultLang,\n          tags: post.node.frontmatter.tags || [],\n        }\n        return <PostsListItem key={props.slug} {...props} />\n      })}\n    </Fragment>\n  )\n}\nexport default PostsList\n"],"sourceRoot":""}