{"version":3,"sources":["webpack:///./src/components/Hero.js","webpack:///./src/components/TagList.js","webpack:///./src/components/PostsListItem.js","webpack:///./src/components/PostsList.js","webpack:///./src/components/Pagination.js","webpack:///./src/templates/blog-list-template.js"],"names":["HeroContainer","styled","TitleContainer","HeroTitle","HeroSubTitle","props","siteCover","useSiteMetadata","fluid","useSiteImages","heroImg","style","backgroundImage","ListContainer","TagListItemLink","TagListItem","TagList","render","this","tags","noLink","key","i","to","tag","React","Component","Post","ReadPost","PostHeader","Excerpt","PostTitleLink","FooterLine","title","excerpt","slug","timeToRead","dangerouslySetInnerHTML","__html","min","aria-label","posts","defaultLang","post","language","PaginationWrapper","PageBtn","PreviousBtn","NextBtn","Spacer","PageInfo","currentPage","nbPages","previousUrl","className","BlogList","data","site","description","pageContext","location","subTitle"],"mappings":"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","file":"component---src-templates-blog-list-template-js-db388681c403913e302c.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport useSiteMetadata from '../hooks/use-site-config'\nimport useSiteImages from '../hooks/use-site-images'\n\nconst HeroContainer = styled.div`\n  position: relative;\n  display: table;\n  width: 100%;\n  height: 400px;\n  overflow: hidden;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n`\n\nconst TitleContainer = styled.div`\n  display: table-cell;\n  vertical-align: middle;\n  text-align: center;\n  width: 100%;\n`\n\nconst HeroTitle = styled.h1`\n  font-weight: 700;\n  font-size: 3rem;\n  margin: 10px 50px;\n  color: var(--color-white);\n  text-shadow: 1px 1px 4px rgba(34, 34, 34, 0.85);\n`\n\nconst HeroSubTitle = styled.h2`\n  margin: 10px 50px;\n  color: var(--color-white);\n  text-shadow: 1px 1px 4px rgba(34, 34, 34, 0.85);\n`\n\nconst Hero = props => {\n  const { siteCover } = useSiteMetadata()\n  const { fluid } = useSiteImages(siteCover)\n  const heroImg = props.heroImg || fluid.src\n\n  return (\n    <HeroContainer style={{ backgroundImage: `url(\"${heroImg}\")` }}>\n      <TitleContainer>\n        <HeroTitle>{props.title}</HeroTitle>\n        {props.subTitle && <HeroSubTitle>{props.subTitle}</HeroSubTitle>}\n      </TitleContainer>\n    </HeroContainer>\n  )\n}\n\nexport default Hero\n","import React, { Fragment } from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst ListContainer = styled.div`\n  display: inline;\n  color: var(--color-textSecondary);\n`\n\nconst TagListItemLink = styled(Link)`\n  text-transform: uppercase;\n  color: var(--color-textSecondary);\n\n  &:not(:first-child) {\n    margin-left: 0.3rem;\n  }\n\n  &:hover {\n    border-bottom: 1px dotted var(--color-textSecondary);\n  }\n  &:before {\n    content: '#';\n  }\n`\n\nconst TagListItem = styled.span`\n  text-transform: uppercase;\n  color: var(--color-textSecondary);\n  &:not(:first-child) {\n    margin-left: 0.3rem;\n  }\n  &:before {\n    content: '#';\n  }\n`\n\nclass TagList extends React.Component {\n  render() {\n    const { tags, noLink } = this.props\n\n    return (\n      <ListContainer>\n        {tags.map((tag, i) => {\n          return (\n            <Fragment key={`tag-list-${i}`}>\n              {!noLink && (\n                <TagListItemLink to={`/tags/${tag}`}>{tag}</TagListItemLink>\n              )}\n              {noLink && <TagListItem to={`/tags/${tag}`}>{tag}</TagListItem>}\n              {i < tags.length - 1 ? ', ' : ''}\n            </Fragment>\n          )\n        })}\n      </ListContainer>\n    )\n  }\n}\n\nexport default TagList\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport TagList from './TagList'\nimport useSiteMetadata from '../hooks/use-site-config'\nimport styled from 'styled-components'\nimport { Bull, ReadingTime } from './Commons'\n\nconst Post = styled.article`\n  border-bottom: 1px solid rgba(214, 209, 230, 0.5);\n  padding-bottom: 1.25rem;\n`\n\nconst ReadPost = styled(Link)`\n  display: block;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  line-height: 2;\n  color: var(--color-text);\n\n  &:hover {\n    background-color: var(--color-grey600);\n    border-radius: 0.25rem;\n    color: var(--color-white);\n  }\n`\n\nconst PostHeader = styled.header`\n  padding: 1em 0;\n`\n\nconst Excerpt = styled.p`\n  line-height: 1.45;\n  padding-bottom: 0.5em;\n`\n\nconst PostTitleLink = styled(Link)`\n  color: var(--color-h2);\n  &:hover {\n    border-bottom: 1px dotted var(--color-text);\n  }\n`\n\nconst FooterLine = styled.div`\n  font-size: 0.8em;\n`\n\nconst PostsListItem = props => {\n  const { title, excerpt, slug, language, tags, timeToRead } = props\n  const { defaultLang } = useSiteMetadata()\n\n  return (\n    <Post>\n      <PostHeader>\n        <h2>\n          <PostTitleLink to={`/${slug}`}> \n            {title}\n          </PostTitleLink>\n        </h2>\n      </PostHeader>\n\n      <section>\n        <Excerpt dangerouslySetInnerHTML={{ __html: excerpt }} />\n      </section>\n\n      <footer>\n        <FooterLine>\n          <ReadingTime min={timeToRead} />\n          <Bull />\n          <TagList tags={tags} />\n        </FooterLine>\n        <ReadPost to={`/${slug}`} aria-label={`View ${title} article`}>\n          Read post â€º\n        </ReadPost>\n      </footer>\n    </Post>\n  )\n}\nexport default PostsListItem\n","import React, { Fragment } from 'react'\n\nimport PostsListItem from './PostsListItem'\nimport useSiteMetadata from '../hooks/use-site-config'\n\nconst PostsList = ({ posts }) => {\n  const { defaultLang } = useSiteMetadata()\n\n  return (\n    <Fragment>\n      {posts.map(post => {\n        const props = {\n          title: post.node.frontmatter.title,\n          excerpt: post.node.excerpt,\n          slug: post.node.frontmatter.slug,\n          timeToRead: post.node.timeToRead,\n          language: post.node.frontmatter.language || defaultLang,\n          tags: post.node.frontmatter.tags || [],\n        }\n        return <PostsListItem key={props.slug} {...props} />\n      })}\n    </Fragment>\n  )\n}\nexport default PostsList\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst PaginationWrapper = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  margin-top: 4em;\n  justify-content: space-between;\n  width: 80%;\n  max-width: 770px;\n  padding: 25px 0;\n  margin: 0px auto;\n\n  @media (max-width: 780px) {\n    width: 90%;\n    padding: 25px 0;\n  }\n`\n\nconst PageBtn = styled(Link)`\n  border-radius: 3px;\n  background-color: var(--color-primary);\n  border: 1px solid var(--color-primary);\n  color: var(--color-white);\n  padding: 8px 20px;\n  min-width: 130px;\n\n  &:hover {\n    background-color: var(--color-white);\n    color: var(--color-primary);\n    border: 1px solid var(--color-primary);\n  }\n\n  @media (max-width: 564px) {\n    margin-top: 10px;\n    width: 100%;\n  }\n`\n\nconst PreviousBtn = styled(PageBtn)`\n  order: 1;\n  @media (max-width: 564px) {\n    order: 2;\n  }\n`\n\nconst NextBtn = styled(PageBtn)`\n  order: 3;\n`\n\nconst Spacer = styled.span`\n  display: block;\n  min-width: 130px;\n\n  &.previous {\n    order: 1;\n  }\n\n  &.next {\n    order: 3;\n  }\n\n  @media (max-width: 564px) {\n    display: none;\n\n    &.previous {\n      order: 2;\n    }\n\n    &.next {\n      order: 3;\n    }\n  }\n`\n\nconst PageInfo = styled.span`\n  order: 2;\n  padding: 1em 0;\n  @media (max-width: 564px) {\n    order: 1;\n  }\n`\n\nclass Pagination extends React.Component {\n  render() {\n    const { currentPage, nbPages } = this.props\n    const previousUrl = currentPage === 2 ? '/' : `/pages/${currentPage - 1}`\n\n    return (\n      <PaginationWrapper>\n        {currentPage !== 1 ? (\n          <PreviousBtn to={previousUrl}>â€¹ Newer posts</PreviousBtn>\n        ) : (\n          <Spacer className=\"previous\" />\n        )}\n\n        <PageInfo>\n          Page {currentPage} of {nbPages}\n        </PageInfo>\n\n        {currentPage < nbPages ? (\n          <NextBtn to={`/pages/${currentPage + 1}`}>Older posts â€º</NextBtn>\n        ) : (\n          <Spacer className=\"next\" />\n        )}\n      </PaginationWrapper>\n    )\n  }\n}\n\nexport default Pagination\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Wrapper from '../components/Wrapper'\nimport Hero from '../components/Hero'\nimport PostsList from '../components/PostsList'\nimport Pagination from '../components/Pagination'\nimport SEO from '../components/SEO'\n\nclass BlogList extends React.Component {\n  render() {\n    const { title, description } = this.props.data.site.siteMetadata\n    const posts = this.props.data.posts.edges\n    const { pageContext } = this.props\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO />\n        <Hero title={title} subTitle={description} />\n\n        <Wrapper>\n          <PostsList posts={posts} />\n        </Wrapper>\n\n        <Pagination\n          nbPages={pageContext.nbPages}\n          currentPage={pageContext.currentPage}\n        />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogList\n\nexport const pageQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    posts: allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fileAbsolutePath: { regex: \"//content/posts//\" }\n        frontmatter: { published: { ne: false }, unlisted: { ne: true } }\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            language\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}