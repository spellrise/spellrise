{"version":3,"sources":["webpack:///./src/components/Hero.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./src/components/Translations.js","webpack:///./src/components/Time.js","webpack:///./src/components/ContentHeader.js","webpack:///./src/components/Content.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./src/components/TagList.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./src/components/Article.js","webpack:///./src/components/PrevNextPost.js","webpack:///./src/templates/blog-post.js"],"names":["HeroContainer","styled","TitleContainer","HeroTitle","HeroSubTitle","props","siteCover","useSiteMetadata","fluid","useSiteImages","heroImg","style","backgroundImage","module","exports","TypeError","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","TranslationContainer","InfoText","TranslationLink","render","translations","this","key","i","href","withPrefix","translation","React","Component","TimeContainer","date","dateObject","Date","yyyymmdd","year","month","day","friendlyDate","datetime","Header","tags","ContentBody","Content","content","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_setPrototypeOf","o","p","setPrototypeOf","__proto__","len","length","arr2","require","mdx","useMDXScope","scope","children","mdxScope","End","fullScope","keys","values","fn","minLen","n","prototype","toString","call","slice","constructor","name","test","Reflect","construct","sham","Proxy","e","ListContainer","TagListItemLink","TagListItem","TagList","noLink","to","tag","obj","value","defineProperty","enumerable","configurable","writable","isNativeReflectConstruct","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","ArticleWrapper","post","PreviewContainer","Preview","PreviewCover","PreviewContent","articles","item","node","article","excerpt","timeToRead","cover","title","slug","aria-label","min","BlogPostTemplate","data","previous","next","location","description","imageShare","lang","path","isBlogPost"],"mappings":"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","file":"component---src-templates-blog-post-js-35b60a8995526bb818fe.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport useSiteMetadata from '../hooks/use-site-config'\nimport useSiteImages from '../hooks/use-site-images'\n\nconst HeroContainer = styled.div`\n  position: relative;\n  display: table;\n  width: 100%;\n  height: 400px;\n  overflow: hidden;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n`\n\nconst TitleContainer = styled.div`\n  display: table-cell;\n  vertical-align: middle;\n  text-align: center;\n  width: 100%;\n`\n\nconst HeroTitle = styled.h1`\n  font-weight: 700;\n  font-size: 3rem;\n  margin: 10px 50px;\n  color: var(--color-white);\n  text-shadow: 1px 1px 4px rgba(34, 34, 34, 0.85);\n`\n\nconst HeroSubTitle = styled.h2`\n  margin: 10px 50px;\n  color: var(--color-white);\n  text-shadow: 1px 1px 4px rgba(34, 34, 34, 0.85);\n`\n\nconst Hero = props => {\n  const { siteCover } = useSiteMetadata()\n  const { fluid } = useSiteImages(siteCover)\n  const heroImg = props.heroImg || fluid.src\n\n  return (\n    <HeroContainer style={{ backgroundImage: `url(\"${heroImg}\")` }}>\n      <TitleContainer>\n        <HeroTitle>{props.title}</HeroTitle>\n        {props.subTitle && <HeroSubTitle>{props.subTitle}</HeroSubTitle>}\n      </TitleContainer>\n    </HeroContainer>\n  )\n}\n\nexport default Hero\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","import React, { Fragment } from 'react'\nimport { withPrefix } from 'gatsby'\nimport styled from 'styled-components'\n\nconst TranslationContainer = styled.div`\n  border-radius: 5px;\n  padding: 10px;\n  margin-top: 10px;\n  background-color: var(--color-lightYellow);\n  border: 1px solid var(--color-grey700);\n`\n\nconst InfoText = styled.span`\n  color: var(--color-grey900);\n`\n\nconst TranslationLink = styled.a`\n  color: var(--color-grey900);\n  text-decoration: underline;\n`\n\nclass Translations extends React.Component {\n  render() {\n    const { translations } = this.props\n\n    return (\n      <TranslationContainer>\n        <InfoText>This article also exists in: </InfoText>\n        {translations.map((translation, i) => {\n          return (\n            <Fragment key={`translation-${i}`}>\n              <TranslationLink href={withPrefix(translation.link)}>\n                {translation.language}\n              </TranslationLink>\n              {i < translations.length - 1 ? ', ' : ''}\n            </Fragment>\n          )\n        })}\n      </TranslationContainer>\n    )\n  }\n}\nexport default Translations\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Time = props => {\n  const TimeContainer = styled.time`\n    color: var(--color-textSecondary);\n  `\n  const { date } = props\n\n  const dateObject = new Date(date)\n  const yyyymmdd = dateObject\n    .toLocaleDateString('en-GB', {\n      year: 'numeric',\n      month: '2-digit',\n      day: 'numeric',\n    })\n    .split('/')\n    .reverse()\n    .join('-')\n  const friendlyDate = dateObject.toLocaleDateString('en-GB', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  })\n\n  return <TimeContainer datetime={yyyymmdd}>{friendlyDate}</TimeContainer>\n}\nexport default Time\n","import React, { Fragment } from 'react'\nimport styled from 'styled-components'\nimport TagList from './TagList'\nimport Translations from './Translations'\nimport Time from './Time'\nimport { Bull } from './Commons'\n\nconst Header = styled.header`\n  margin-bottom: 2rem;\n  color: var(--color-textSecondary);\n  font-size: 0.9em;\n`\n\nclass ContentIntro extends React.Component {\n  render() {\n    const { date, tags, translations } = this.props\n\n    return (\n      <Header>\n        {date && <Time date={date} />}\n        {date && Array.isArray(tags) && tags.length > 0 && <Bull />}\n        {Array.isArray(tags) && tags.length > 0 && (\n          <Fragment>\n            <TagList tags={tags} />\n          </Fragment>\n        )}\n\n        {translations && <Translations translations={translations} />}\n      </Header>\n    )\n  }\n}\n\nexport default ContentIntro\n","import React from 'react'\nimport styled from 'styled-components'\nimport ContentHeader from './ContentHeader'\nimport MDXRenderer from 'gatsby-plugin-mdx/mdx-renderer'\n\nconst ContentBody = styled.div`\n  line-height: 1.6;\n\n  & > h2 {\n    color: var(--color-h2);\n    padding-top: 3rem;\n    margin-top: 3rem;\n    border-top: 1px solid #ececec;\n  }\n\n  & > h3 {\n    padding-top: 3rem;\n  }\n\n  & > p {\n    margin: 1em 0 0 0;\n  }\n\n  & a {\n    fill: var(--color-text);\n    box-shadow: 0 2px 0 0 var(--color-secondary);\n\n    &:hover {\n      filter: brightness(150%);\n      box-shadow: none;\n    }\n\n    &.anchor,\n    &.gatsby-resp-image-link {\n      box-shadow: none;\n    }\n  }\n\n  h1 .anchor svg,\n  h2 .anchor svg,\n  h3 .anchor svg,\n  h4 .anchor svg,\n  h5 .anchor svg,\n  h6 .anchor svg {\n    visibility: hidden;\n    margin-left: -16px;\n  }\n\n  h1:hover .anchor svg,\n  h2:hover .anchor svg,\n  h3:hover .anchor svg,\n  h4:hover .anchor svg,\n  h5:hover .anchor svg,\n  h6:hover .anchor svg,\n  h1 .anchor:focus svg,\n  h2 .anchor:focus svg,\n  h3 .anchor:focus svg,\n  h4 .anchor:focus svg,\n  h5 .anchor:focus svg,\n  h6 .anchor:focus svg {\n    visibility: visible;\n  }\n\n  & > blockquote {\n    box-sizing: border-box;\n    background-color: var(--color-secondaryContentBackground);\n    border-left: 5px solid var(--color-secondary);\n    margin: 30px 0px;\n    padding: 5px 20px;\n    border-radius: 0 8px 8px 0;\n  }\n\n  & > blockquote p {\n    margin: 0.8em 0;\n    font-style: italic;\n  }\n\n  & .gatsby-highlight {\n    border-radius: 5px;\n    font-size: 15px;\n    line-height: 1.7;\n    border-radius: 10px;\n    overflow: auto;\n    tab-size: 1.5em;\n    margin: 1.5em -1.5em;\n\n    @media (max-width: 500px) {\n      border-radius: 0;\n      margin-left: -25px;\n      margin-right: -25px;\n    }\n  }\n\n  & .gatsby-highlight > pre {\n    border: 0;\n    margin: 0;\n    padding: 1;\n  }\n\n  & .gatsby-highlight pre[class*='language-'] {\n    float: left;\n    min-width: 100%;\n  }\n\n  & .gatsby-highlight-code-line {\n    background-color: var(--color-darkBlue);\n    display: block;\n    margin-right: -1em;\n    margin-left: -1em;\n    padding-right: 1em;\n    padding-left: 0.75em;\n    border-left: 0.25em solid var(--color-yellow);\n  }\n\n  & h1 > code.language-text,\n  & h2 > code.language-text,\n  & h3 > code.language-text,\n  & h4 > code.language-text,\n  & h5 > code.language-text,\n  & h6 > code.language-text,\n  & a > code.language-text,\n  & p > code.language-text,\n  & li > code.language-text,\n  & em > code.language-text,\n  & strong > code.language-text {\n    background: var(--color-beige);\n    color: #222222cc;\n    padding: 0 3px;\n    font-size: 0.94em;\n    border-radius: 0.3rem;\n    word-wrap: break-word;\n  }\n\n  & code {\n    word-wrap: break-word;\n  }\n\n  & table {\n    margin-top: 1em;\n    margin-bottom: 1em;\n    border-collapse: collapse;\n    overflow: hidden;\n\n    & th,\n    & td {\n      padding: 0.5em;\n      background-color: var(--color-secondaryContentBackground);\n    }\n    & tr {\n      border-bottom: 2px solid var(--color-white);\n    }\n    & tbody tr:last-child {\n      border-bottom: none;\n    }\n  }\n`\n\nclass Content extends React.Component {\n  render() {\n    const { content, date, tags, translations } = this.props\n\n    return (\n      <section>\n        {(tags || date || translations) && (\n          <ContentHeader date={date} tags={tags} translations={translations} />\n        )}\n\n        <ContentBody>\n          <MDXRenderer>{content}</MDXRenderer>\n        </ContentBody>\n      </section>\n    )\n  }\n}\n\nexport default Content\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","import React, { Fragment } from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst ListContainer = styled.div`\n  display: inline;\n  color: var(--color-textSecondary);\n`\n\nconst TagListItemLink = styled(Link)`\n  text-transform: uppercase;\n  color: var(--color-textSecondary);\n\n  &:not(:first-child) {\n    margin-left: 0.3rem;\n  }\n\n  &:hover {\n    border-bottom: 1px dotted var(--color-textSecondary);\n  }\n  &:before {\n    content: '#';\n  }\n`\n\nconst TagListItem = styled.span`\n  text-transform: uppercase;\n  color: var(--color-textSecondary);\n  &:not(:first-child) {\n    margin-left: 0.3rem;\n  }\n  &:before {\n    content: '#';\n  }\n`\n\nclass TagList extends React.Component {\n  render() {\n    const { tags, noLink } = this.props\n\n    return (\n      <ListContainer>\n        {tags.map((tag, i) => {\n          return (\n            <Fragment key={`tag-list-${i}`}>\n              {!noLink && (\n                <TagListItemLink to={`/tags/${tag}`}>{tag}</TagListItemLink>\n              )}\n              {noLink && <TagListItem to={`/tags/${tag}`}>{tag}</TagListItem>}\n              {i < tags.length - 1 ? ', ' : ''}\n            </Fragment>\n          )\n        })}\n      </ListContainer>\n    )\n  }\n}\n\nexport default TagList\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","import React from 'react'\nimport styled from 'styled-components'\nimport Content from './Content'\n\nconst ArticleWrapper = styled.article`\n  padding: 0 30px 30px;\n\n  @media only screen and (max-width: 500px) {\n    padding: 0;\n  }\n`\n\nconst ArticleFooter = styled.footer`\n  position: relative;\n  margin: 6rem 0 0;\n  padding: 3rem 0 0;\n  border-top: 1px solid #ececec;\n`\n\nclass Article extends React.Component {\n  render() {\n    const { post } = this.props\n\n    return (\n      <ArticleWrapper>\n        <Content\n          content={post.body}\n          date={post.frontmatter.date}\n          tags={post.frontmatter.tags}\n          translations={post.frontmatter.translations}\n        />\n      </ArticleWrapper>\n    )\n  }\n}\n\nexport default Article\n","import React, { Fragment } from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport useSiteMetadata from '../hooks/use-site-config'\nimport useSiteImages from '../hooks/use-site-images'\nimport TagList from './TagList'\nimport { ReadingTime, Bull } from './Commons'\n\nconst PreviewContainer = styled.aside`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 770px;\n  width: 80%;\n  margin: 0px auto 30px auto;\n  top: 20px;\n  position: relative;\n\n  @media (max-width: 780px) {\n    width: 100%;\n    padding: 25px;\n  }\n`\n\nconst Preview = styled.article`\n  cursor: pointer;\n  flex: 1 1 300px;\n  background-color: var(--color-secondaryContentBackground);\n  box-shadow: 0 0 0 0, 0 6px 12px rgba(0, 0, 0, 0.1);\n  margin: 20px 20px;\n  border-radius: 5px;\n\n  &:hover {\n    box-shadow: 0 0 0 0, 0 6px 12px var(--color-grey300);\n    transition: all 0.3s ease;\n    transform: translate3D(0, -1px, 0);\n  }\n\n  @media (min-width: 780px) {\n    &:first-child {\n      margin-left: 0;\n    }\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`\n\nconst PreviewCover = styled.div`\n  width: auto;\n  height: 200px;\n  background: #c5d2d9 no-repeat 50%;\n  background-size: cover;\n  border-radius: 5px 5px 0 0;\n`\n\nconst PreviewContent = styled.div`\n  padding: 20px;\n\n  header {\n    padding: 0 0 10px 0;\n  }\n  section {\n    padding-bottom: 10px;\n  }\n  footer {\n    font-size: 0.8em;\n  }\n`\n\nconst PrevNextPost = props => {\n  const { previous, next } = props\n  const articles = [previous, next].filter(i => i).map(item => ({ node: item }))\n  const { siteCover, defaultLang } = useSiteMetadata()\n  const { fluid } = useSiteImages(siteCover)\n\n  return (\n    <Fragment>\n      <PreviewContainer>\n        {articles.map((article, i) => {\n          const { excerpt, timeToRead } = article.node\n          const {\n            tags,\n            cover,\n            title,\n            slug,\n            language,\n          } = article.node.frontmatter\n          const heroImg = (cover && cover.publicURL) || fluid.src\n\n          return (\n            <Preview key={`prev-next-${i}`}>\n              <Link to={`/${slug}`} aria-label={`View ${title} article`}>\n                <PreviewCover\n                  style={{ backgroundImage: `url(\"${heroImg}\")` }}\n                />\n                <PreviewContent>\n                  <header>\n                    <h2>{title}</h2>\n                  </header>\n                  <section>\n                    <p>{excerpt}</p>\n                  </section>\n                  <footer>\n                    <ReadingTime min={timeToRead} />\n                    {Array.isArray(tags) && (\n                      <>\n                        <Bull />\n                        <TagList tags={tags} noLink={true} />\n                      </>\n                    )}\n                  </footer>\n                </PreviewContent>\n              </Link>\n            </Preview>\n          )\n        })}\n      </PreviewContainer>\n    </Fragment>\n  )\n}\n\nexport default PrevNextPost\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport Wrapper from '../components/Wrapper'\nimport Hero from '../components/Hero'\nimport Article from '../components/Article'\nimport PrevNextPost from '../components/PrevNextPost'\nimport SEO from '../components/SEO'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.post\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.excerpt}\n          cover={post.frontmatter.cover && post.frontmatter.cover.publicURL}\n          imageShare={\n            post.frontmatter.imageShare && post.frontmatter.imageShare.publicURL\n          }\n          lang={post.frontmatter.language}\n          translations={post.frontmatter.translations}\n          path={post.frontmatter.slug}\n          isBlogPost\n        />\n\n        <Hero\n          heroImg={post.frontmatter.cover && post.frontmatter.cover.publicURL}\n          title={post.frontmatter.title}\n        />\n\n        <Wrapper>\n          <Article post={post} />\n        </Wrapper>\n\n        {/* <Wrapper as=\"aside\">\n          <Disqus slug={post.frontmatter.slug} title={post.frontmatter.title} />\n        </Wrapper> */}\n\n        <PrevNextPost previous={previous} next={next} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    post: mdx(frontmatter: { slug: { eq: $slug } }) {\n      excerpt\n      body\n      frontmatter {\n        title\n        date\n        slug\n        language\n        tags\n        cover {\n          publicURL\n        }\n        imageShare {\n          publicURL\n        }\n        translations {\n          language\n          link\n          hreflang\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}